---
apiVersion: v1
kind: Service
metadata:
  name: schema-provider
  labels:
    app.kubernetes.io/name: schema-provider
    app.kubernetes.io/instance: schema-provider
spec:
  type: LoadBalancer
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
      name: schema-provider
  selector:
    app.kubernetes.io/name: schema-provider
    app.kubernetes.io/instance: schema-provider
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: schema-provider
  labels:
    app.kubernetes.io/name: schema-provider
    app.kubernetes.io/instance: schema-provider
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: schema-provider
      app.kubernetes.io/instance: schema-provider
  template:
    metadata:
      labels:
        app.kubernetes.io/name: schema-provider
        app.kubernetes.io/instance: schema-provider
    spec:
      containers:
        - name: schema-provider
          imagePullPolicy: IfNotPresent
          image: "lipanski/docker-static-website:2.1.0"
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          volumeMounts:
            - name: schemas
              mountPath: /home/static/schemas
      volumes:
        - name: schemas
          configMap:
            name: schema-provider
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: schema-provider
  labels:
    app.kubernetes.io/name: schema-provider
    app.kubernetes.io/instance: schema-provider
data:
  required-properties-schema.json: |-
    {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$id": "http://localhost:3000/ProductOffering-schema.json",
      "title": "Test Schema - Extension with required properties",
      "description": "Test Schema - Extension with required properties",
      "type": "object",
      "properties": {
          "extensionNumber": {
              "type": "number"
          },
          "extensionString": {
              "type": "string"
          },
          "extensionArray": {
              "type": "array",
              "items": {
                  "type": "string"
              }
          },
          "extensionObject": {
              "type": "object",
              "properties": {
                  "a": {
                      "type": "string"
                  }
              }
          }
      },
      "required": ["extensionNumber", "extensionString"]
    }
  properties-extension-schema.json: |-
    {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$id": "http://localhost:3000/ProductOffering-schema.json",
      "title": "Test Schema - Extension with properties",
      "description": "Test Schema - Extension with properties",
      "type": "object",
      "properties": {
          "extensionNumber": {
              "type": "number"
          },
          "extensionString": {
              "type": "string"
          },
          "extensionArray": {
              "type": "array",
              "items": {
                  "type": "string"
              }
          },
          "extensionObject": {
              "type": "object",
              "properties": {
                  "a": {
                      "type": "string"
                  }
              }
          }
      }
    }
  no-additional-extension-schema.json: |-
    {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$id": "http://localhost:3000/ProductOffering-schema.json",
      "title": "Test Schema - Extension with properties",
      "description": "Test Schema - Extension with properties",
      "type": "object",
      "properties": {
          "extensionNumber": {
              "type": "number"
          },
          "extensionString": {
              "type": "string"
          },
          "extensionArray": {
              "type": "array",
              "items": {
                  "type": "string"
              }
          },
          "extensionObject": {
              "type": "object",
              "properties": {
                  "a": {
                      "type": "string"
                  }
              }
          }
      },
      "additionalProperties": false
    }

