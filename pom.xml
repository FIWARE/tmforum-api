<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.fiware</groupId>
    <artifactId>tmforum</artifactId>
    <version>0.1</version>
    <packaging>pom</packaging>

    <parent>
        <groupId>io.micronaut</groupId>
        <artifactId>micronaut-parent</artifactId>
        <version>3.7.0</version>
    </parent>

    <developers>
        <developer>
            <name>${project.author.name}</name>
            <email>${project.author.email}</email>
        </developer>
    </developers>

    <description>${project.description}</description>
    <url>${project.url}</url>
    <licenses>
        <license>
            <name>${project.license.name}</name>
            <url>${project.license.url}</url>
        </license>
    </licenses>

    <modules>
        <module>mapping</module>
        <module>common</module>
        <module>party</module>
    </modules>

    <properties>
        <jdk.version>17</jdk.version>
        <release.version>17</release.version>
        <micronaut.version>3.7.0</micronaut.version>

        <!-- project info -->
        <project.author.name>Stefan Wiedemann</project.author.name>
        <project.author.email>stefan.wiedemann@fiware.org</project.author.email>
        <project.description>Implementation of the TMForum APIs, backed by NGSI-LD</project.description>
        <project.summary>NGSI-LD backed TMForum.</project.summary>
        <project.url>https://github.com/wistefan/tmforum-poc</project.url>
        <project.license.name>GNU Affero General Public License v3.0</project.license.name>
        <project.license.identifier>AGPL-3.0-only</project.license.identifier>
        <project.license.url>https://www.gnu.org/licenses/agpl.txt</project.license.url>
        <project.title>FIWARE TMForum API</project.title>
        <project.vendor>FIWARE Foundation, e.V.</project.vendor>
        <project.contact.domain>fiware.org</project.contact.domain>
        <project.contact.email>stefan.wiedemann@fiware.org</project.contact.email>

        <!-- docker -->
        <exec.mainClass>org.fiware.tmforum.Application</exec.mainClass>
        <image.registry>quay.io</image.registry>
        <image.repository>wi_stefan</image.repository>
        <image.tag>latest</image.tag>

        <!-- lazy dev -->
        <version.org.mapstruct>1.4.2.Final</version.org.mapstruct>
        <version.org.projectlombok>1.18.22</version.org.projectlombok>

        <!-- logging -->
        <version.io.kokuwa.micronaut.logging>3.0.4</version.io.kokuwa.micronaut.logging>


        <!-- code gen -->
        <version.org.openapitools.generator-maven-plugin>6.1.0</version.org.openapitools.generator-maven-plugin>
        <version.io.kokuwa.micronaut.codegen>3.1.0</version.io.kokuwa.micronaut.codegen>

        <!-- rx -->
        <version.io.reactivex.rxjava2.rxjava>2.2.21</version.io.reactivex.rxjava2.rxjava>
        <version.javax.inject>1</version.javax.inject>

        <!-- build -->
        <version.org.codehaus.mojo.build-helper-maven-plugin>3.3.0</version.org.codehaus.mojo.build-helper-maven-plugin>

        <!-- test -->
        <version.io.kokuwa.maven.k3s-plugin>0.6.1</version.io.kokuwa.maven.k3s-plugin>
        <version.org.mockito.mockito-all>1.10.19</version.org.mockito.mockito-all>
        <version.org.mockito.mockito-junit-jupiter>4.2.0</version.org.mockito.mockito-junit-jupiter>
        <version.org.awaitility>4.0.3</version.org.awaitility>
        <version.org.jacoco.maven-plugin>0.8.7</version.org.jacoco.maven-plugin>
        <version.org.eluder.coveralls.maven-plugin>2.2.0</version.org.eluder.coveralls.maven-plugin>
        <version.com.github.spotbugs.maven-plugin>4.5.2.0</version.com.github.spotbugs.maven-plugin>
        <version.org.apache.maven.plugins.maven-site-plugin>3.9.1</version.org.apache.maven.plugins.maven-site-plugin>
        <version.org.apache.maven.plugins.maven-javadoc-plugin>3.2.0</version.org.apache.maven.plugins.maven-javadoc-plugin>
        <version.com.google.code.findbugs.annotations>3.0.1u2</version.com.google.code.findbugs.annotations>
        <coveralls.token>myToken</coveralls.token>
        <jacoco.reportFolder>${project.build.directory}/site/jacoco</jacoco.reportFolder>
        <jacoco.utReportFile>${jacoco.reportFolder}/test.exec</jacoco.utReportFile>
        <spotbugs.reportFolder>${project.build.directory}/site/spotbugs</spotbugs.reportFolder>

        <!-- tm-forum api links. -->
        <tmforum.api.url>API-URL</tmforum.api.url>
        <!-- will be moved to the modules -->
        <tmforum.product-catalogue-api.url>https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/4.1.0/swagger/TMF620-ProductCatalog-v4.1.0.swagger.json</tmforum.product-catalogue-api.url>
        <tmforum.agreement-api.url>https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/4.0.0/swagger/TMF651-Agreement-v4.0.0.swagger.json</tmforum.agreement-api.url>

        <!-- tm-forum conformance test config -->
        <module.ctk.url>module-specific-url</module.ctk.url>
        <module.ctk.script-folder>module-specific-script-folder</module.ctk.script-folder>
        <module.ctk.run-script>module-specific-run-script</module.ctk.run-script>
        <!-- base path to be used for the application when executing the conformance tests -->
        <module.ctk.base-path>/</module.ctk.base-path>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- lazy dev -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${version.org.projectlombok}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${version.org.mapstruct}</version>
            </dependency>
            <dependency>
                <groupId>javax.inject</groupId>
                <artifactId>javax.inject</artifactId>
                <version>${version.javax.inject}</version>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>${version.org.mockito.mockito-all}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-junit-jupiter</artifactId>
                <version>${version.org.mockito.mockito-junit-jupiter}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.awaitility</groupId>
                <artifactId>awaitility</artifactId>
                <version>${version.org.awaitility}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.google.code.findbugs</groupId>
                <artifactId>annotations</artifactId>
                <version>${version.com.google.code.findbugs.annotations}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>${version.org.codehaus.mojo.build-helper-maven-plugin}</version>
            </plugin>
            <plugin>
                <groupId>io.micronaut.build</groupId>
                <artifactId>micronaut-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                    <!-- Uncomment to enable incremental compilation -->
                    <!-- <useIncrementalCompilation>false</useIncrementalCompilation> -->
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${version.org.projectlombok}</version>
                        </path>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${version.org.mapstruct}</version>
                        </path>
                        <path>
                            <groupId>io.micronaut</groupId>
                            <artifactId>micronaut-inject-java</artifactId>
                            <version>${micronaut.version}</version>
                        </path>
                        <path>
                            <groupId>io.micronaut</groupId>
                            <artifactId>micronaut-validation</artifactId>
                            <version>${micronaut.version}</version>
                        </path>
                        <path>
                            <groupId>io.micronaut</groupId>
                            <artifactId>micronaut-graal</artifactId>
                            <version>${micronaut.version}</version>
                        </path>
                    </annotationProcessorPaths>
                    <compilerArgs>
                        <arg>-Amicronaut.processing.group=org.fiware.tmforum</arg>
                        <arg>-Amicronaut.processing.module=party</arg>
                    </compilerArgs>
                </configuration>
                <executions>
                    <execution>
                        <id>test-compile</id>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                        <configuration>
                            <annotationProcessorPaths>
                                <path>
                                    <groupId>org.projectlombok</groupId>
                                    <artifactId>lombok</artifactId>
                                    <version>${version.org.projectlombok}</version>
                                </path>
                                <path>
                                    <groupId>org.mapstruct</groupId>
                                    <artifactId>mapstruct-processor</artifactId>
                                    <version>${version.org.mapstruct}</version>
                                </path>
                                <path>
                                    <groupId>io.micronaut</groupId>
                                    <artifactId>micronaut-inject-java</artifactId>
                                    <version>${micronaut.version}</version>
                                </path>
                                <path>
                                    <groupId>io.micronaut</groupId>
                                    <artifactId>micronaut-validation</artifactId>
                                    <version>${micronaut.version}</version>
                                </path>
                                <path>
                                    <groupId>io.micronaut</groupId>
                                    <artifactId>micronaut-graal</artifactId>
                                    <version>${micronaut.version}</version>
                                </path>
                            </annotationProcessorPaths>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>${version.org.apache.maven.plugins.maven-site-plugin}</version>
            </plugin>
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>${version.com.github.spotbugs.maven-plugin}</version>
                <configuration>
                    <xmlOutput>true</xmlOutput>
                    <failOnError>false</failOnError>
                    <xmlOutputDirectory>${spotbugs.reportFolder}</xmlOutputDirectory>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${version.org.jacoco.maven-plugin}</version>
                <configuration>
                    <!-- exclude generated code -->
                    <excludes>
                        <exclude>org/fiware/ngsi/**/*</exclude>
                        <exclude>org/fiware/tmforum/**/*</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>pre-unit-tests</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to the file which contains the execution data. -->
                            <destFile>${jacoco.utReportFile}</destFile>
                        </configuration>
                    </execution>
                    <!-- Ensures that the code coverage report for unit tests is created after unit tests have been run -->
                    <execution>
                        <id>post-unit-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${jacoco.utReportFile}</dataFile>
                            <outputDirectory>${jacoco.reportFolder}</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.eluder.coveralls</groupId>
                <artifactId>coveralls-maven-plugin</artifactId>
                <version>${version.org.eluder.coveralls.maven-plugin}</version>
                <configuration>
                    <repoToken>${coveralls.token}</repoToken>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${version.org.apache.maven.plugins.maven-javadoc-plugin}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <!-- add generated sources -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>openapi-sources</id>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>add-source</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>${project.build.directory}/generated-sources/openapi</source>
                                </sources>
                            </configuration>
                        </execution>
                        <execution>
                            <id>openapi-test-sources</id>
                            <phase>generate-test-sources</phase>
                            <goals>
                                <goal>add-test-source</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>${project.build.directory}/generated-test-sources/openapi</source>
                                </sources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- build -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>micronaut-lib</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>copy-dependencies</goal>
                            </goals>
                            <configuration>
                                <includeScope>runtime</includeScope>
                                <outputDirectory>${project.build.directory}/lib</outputDirectory>
                                <silent>true</silent>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <configuration>
                        <archive>
                            <manifest>
                                <addClasspath>true</addClasspath>
                                <classpathPrefix>lib/</classpathPrefix>
                                <mainClass>org.fiware.tmforum.${project.artifactId}.Application</mainClass>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>
                <!-- run tests -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <configuration>
                        <argLine>@{argLine} --add-opens java.base/java.lang=ALL-UNNAMED</argLine>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <executions>
                        <execution>
                            <goals>
                                <goal>integration-test</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <!-- this is very important to avoid classpath conflicts between the micronaut-test-context and the beans present inside the shaded-jar -->
                        <classesDirectory>${project.build.outputDirectory}</classesDirectory>
                        <failIfNoTests>true</failIfNoTests>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <profiles>
        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>io.kokuwa.maven</groupId>
                            <artifactId>k3s-maven-plugin</artifactId>
                            <version>${version.io.kokuwa.maven.k3s-plugin}</version>
                            <executions>
                                <execution>
                                    <id>prepare-test-cluster</id>
                                    <goals>
                                        <goal>create</goal>
                                        <goal>start</goal>
                                        <goal>image</goal>
                                        <goal>kubectl</goal>
                                        <goal>rm</goal>
                                    </goals>
                                    <configuration>
                                        <manifests>${project.parent.basedir}/k3s</manifests>
                                        <streamLogs>true</streamLogs>
                                        <portBindings>
                                            <portBinding>1026:1026</portBinding>
                                        </portBindings>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <profile>
            <id>dev</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>io.kokuwa.maven</groupId>
                            <artifactId>k3s-maven-plugin</artifactId>
                            <version>${version.io.kokuwa.maven.k3s-plugin}</version>
                            <executions>
                                <execution>
                                    <id>prepare-test-cluster</id>
                                    <goals>
                                        <goal>create</goal>
                                        <goal>start</goal>
                                        <goal>image</goal>
                                        <goal>kubectl</goal>
                                    </goals>
                                    <configuration>
                                        <manifests>${project.parent.basedir}/k3s</manifests>
                                        <streamLogs>true</streamLogs>
                                        <portBindings>
                                            <portBinding>1026:1026</portBinding>
                                        </portBindings>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <profile>
            <id>conformance-test</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-surefire-plugin</artifactId>
                            <configuration>
                                <skip>true</skip>
                            </configuration>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-failsafe-plugin</artifactId>
                            <configuration>
                                <skip>true</skip>
                            </configuration>
                        </plugin>
                        <plugin>
                            <artifactId>maven-resources-plugin</artifactId>
                            <version>2.6</version>
                            <executions>
                                <execution>
                                    <id>copy-resources</id>
                                    <phase>validate</phase>
                                    <goals>
                                        <goal>resources</goal>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${project.build.directory}/conformance-test</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>${project.parent.basedir}/k3s</directory>
                                                <filtering>true</filtering>
                                            </resource>
                                            <resource>
                                                <directory>${project.parent.basedir}/conformance-test</directory>
                                                <filtering>true</filtering>
                                            </resource>
                                        </resources>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>com.google.cloud.tools</groupId>
                            <artifactId>jib-maven-plugin</artifactId>
                            <version>3.2.1</version>
                            <executions>
                                <execution>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>dockerBuild</goal>
                                    </goals>
                                    <configuration>
                                        <from>
                                            <image>registry.access.redhat.com/ubi8/openjdk-17:1.11-2</image>
                                        </from>
                                        <to>
                                            <image>api</image>
                                        </to>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>io.kokuwa.maven</groupId>
                            <artifactId>k3s-maven-plugin</artifactId>
                            <version>${version.io.kokuwa.maven.k3s-plugin}</version>
                            <executions>
                                <execution>
                                    <id>prepare-test-cluster</id>
                                    <goals>
                                        <goal>create</goal>
                                        <goal>start</goal>
                                        <goal>image</goal>
                                        <goal>kubectl</goal>
                                    </goals>
                                    <configuration>
                                        <manifests>${project.build.directory}/conformance-test</manifests>
                                        <streamLogs>true</streamLogs>
                                        <dockerImages>
                                            <dockerImage>api</dockerImage>
                                        </dockerImages>
                                        <portBindings>
                                            <portBinding>8632:8632</portBinding>
                                        </portBindings>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>io.fabric8</groupId>
                            <artifactId>docker-maven-plugin</artifactId>
                            <version>0.40.2</version>
                            <executions>
                                <execution>
                                    <id>run-test</id>
                                    <phase>integration-test</phase>
                                    <goals>
                                        <goal>build</goal>
                                        <goal>start</goal>
                                    </goals>
                                    <configuration>
                                        <images>
                                            <image>
                                                <name>ctk</name>
                                                <build>
                                                    <dockerFile>${project.parent.basedir}/conformance-test/Dockerfile</dockerFile>
                                                    <args>
                                                        <CTK_URL>${module.ctk.url}</CTK_URL>
                                                        <CTK_SCRIPT_FOLDER>${module.ctk.script-folder}</CTK_SCRIPT_FOLDER>
                                                    </args>
                                                </build>
                                                <run>
                                                    <env>
                                                        <CTK_RUN_SCRIPT>${module.ctk.run-script}</CTK_RUN_SCRIPT>
                                                    </env>
                                                    <network>
                                                        <mode>host</mode>
                                                    </network>
                                                    <volumes>
                                                        <bind>
                                                            <volume>${project.build.directory}:/results</volume>
                                                        </bind>
                                                    </volumes>
                                                    <wait>
                                                        <time>30000</time>
                                                        <exit>0</exit>
                                                    </wait>
                                                </run>
                                            </image>
                                        </images>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <profile>
            <id>oci</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>com.google.cloud.tools</groupId>
                            <artifactId>jib-maven-plugin</artifactId>
                            <!-- disables the micronaut plugin extension, that breaks the exectuion individual config -->
                            <configuration combine.self="override">
                                <from>
                                    <image>registry.access.redhat.com/ubi8/openjdk-17:1.11-2</image>
                                </from>
                                <to>
                                    <image>${image.registry}/${image.repository}/${project.artifactId}</image>
                                    <tags>
                                        <tag>${image.tag}</tag>
                                        <tag>latest</tag>
                                    </tags>
                                </to>
                                <extraDirectories>
                                    <paths>
                                        <path>
                                            <from>LICENSE</from>
                                            <into>/licenses</into>
                                        </path>
                                    </paths>
                                </extraDirectories>
                                <container>
                                    <labels>
                                        <!-- oci labels -->
                                        <org.opencontainers.image.authors>${project.author.name} - ${project.author.email}</org.opencontainers.image.authors>
                                        <org.opencontainers.image.description>${project.description}</org.opencontainers.image.description>
                                        <org.opencontainers.image.documentation>${project.url}</org.opencontainers.image.documentation>
                                        <org.opencontainers.image.licenses>${project.license.identifier}</org.opencontainers.image.licenses>
                                        <org.opencontainers.image.source>${project.url}</org.opencontainers.image.source>
                                        <org.opencontainers.image.title>${project.title}</org.opencontainers.image.title>
                                        <org.opencontainers.image.vendor>${project.vendor}</org.opencontainers.image.vendor>
                                        <org.opencontainers.image.version>${project.version}</org.opencontainers.image.version>
                                        <org.opencontainers.image.created>${maven.build.timestamp}</org.opencontainers.image.created>
                                        <org.fiware.contact.localpart>${project.contact.email}</org.fiware.contact.localpart>
                                        <org.fiware.contact.domain>${project.contact.domain}</org.fiware.contact.domain>
                                        <!-- redhat required labels -->
                                        <name>${project.title}</name>
                                        <description>${project.description}</description>
                                        <authors>${project.author.name} - ${project.author.email}</authors>
                                        <maintainer>${project.author.email}</maintainer>
                                        <documentation>${project.url}</documentation>
                                        <vendor>${project.vendor}</vendor>
                                        <summary>${project.summary}</summary>
                                    </labels>
                                </container>
                            </configuration>
                            <executions>
                                <execution>
                                    <id>deploy</id>
                                    <phase>deploy</phase>
                                    <goals>
                                        <goal>build</goal>
                                    </goals>
                                </execution>
                                <execution>
                                    <id>install</id>
                                    <phase>install</phase>
                                    <goals>
                                        <goal>dockerBuild</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>
</project>

